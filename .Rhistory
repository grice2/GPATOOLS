axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 30),
axis.title.y = element_text(size = 30))+
scale_fill_manual('',values=primary.colors[c(2:1)])
dev.off()
#############################################DIGITAL: AUTHORS###############################################
digital.data.analysis <-  digital.data %>% group_by(authors) %>%
summarise(Facebook = sum(facebook,na.rm = T),
Twitter = sum(twitter,na.rm = T),
Reddit = sum(reddit,na.rm = T),
Total = sum(total,na.rm = T)) %>% filter(!is.na(authors))
digital.data.analysis$authors <- factor(digital.data.analysis$authors , levels = digital.data.analysis$authors[
order(digital.data.analysis$Total)])
png('covid-disinfo-digital-authors.png', width = 14, height = 8, units = 'in',res=250)
ggplot(digital.data.analysis[digital.data.analysis$Total>20000,], aes(x=authors, y=Total, ymin=min(Total),
ymax=.2)) +
geom_bar(stat='identity', position = "dodge",fill = primary.colors[1])+gpa_theme(20)+
geom_text(color = "white", aes(x = authors, y =Total-7000, label = Total),
position = position_stack(), size = 7) + coord_flip()+
labs(x=NULL, y='Digital Engagement', title=
'Disinformation Engagement By Authors',
caption = "Source: Digital Data from January 01, 2020 to March 15, 2020")+
scale_y_continuous()+
theme(axis.text.y = element_text(size = 20),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
dev.off()
#average
digital.data.analysis <-  digital.data %>% group_by(authors) %>%
summarise(Facebook = mean(facebook,na.rm = T),
Twitter = mean(twitter,na.rm = T),
Reddit = mean(reddit,na.rm = T),
Total = mean(total,na.rm = T)) %>% filter(!is.na(authors))
digital.data.analysis$authors <- factor(digital.data.analysis$authors , levels = digital.data.analysis$authors[
order(digital.data.analysis$Total)])
digital.data.analysis$Control <- str_detect(digital.data.analysis$authors,"2019 Average Content")
digital.data.analysis$Control <- factor(digital.data.analysis$Control,levels = c(TRUE,FALSE),
labels = c("2019 Average Content","Disinformation"))
library(aws.s3)
#You are going to have to install the package AWS.S3.
#For some computers you will need to use devtools for this
#I believe in that case you can Google
library(tidyverse)
# specify keys as environment variables
Sys.setenv("AWS_ACCESS_KEY_ID" = "AKIAVSMF5JL4AALKJAMD",
"AWS_SECRET_ACCESS_KEY" = "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",
"AWS_DEFAULT_REGION" = "us-east-1")
#aws.s3::s3read_using( , object = )
library(aws.s3)
library(tidyverse)
library(stringr)
library(reshape2)
library(gbm)
library(rpart)
library(rpart.plot)
library(readxl)
library(radiant.data)
library(stringr)
#sjplot
#The following are functions that set up the color scheme for plotting later
primary.colors <- c('#0A2240','#981B1E','#C1A783','#8D98AA','#3474DA')
continuous.colors <- c('#0A2240','#002D74','#205493','#0071BC',
'#3474DA')
gpa_theme <- function(basesize){
theme(text=element_text(size=basesize, family="Open Sans"),
plot.title=element_text(hjust=.5),
legend.position = 'bottom',
panel.background = element_rect(fill='white'),
axis.text = element_text(size=basesize-3),
axis.title = element_text(size=basesize-3),
plot.caption=element_text(size=basesize-2, hjust=0, vjust=0)
)
}
#Load data
#Twitter data
Twitter.Jan.1.15 = aws.s3::s3read_using(read_excel, object = "s3://gpa-research/covid19-disinfo/covid-19-disinfo-worksheet-sieus-edits.xlsx", sheet = "Twitter Jan 1- Jan 15") %>% select(-c("Country...12"))
names(Twitter.Jan.1.15)[names(Twitter.Jan.1.15) == "Country...7"] <- "Country"
colnames(Twitter.Jan.1.15)
Twitter.Jan.1.15$Country<- as.character(Twitter.Jan.1.15$Country)
Twitter.Jan.1.15$Retweeter3 <-  as.character(Twitter.Jan.1.15$Retweeter3)
Twitter.Jan.15.31 = aws.s3::s3read_using(read_excel, object = "s3://gpa-research/covid19-disinfo/covid-19-disinfo-worksheet-sieus-edits.xlsx", sheet = "Twitter Jan 15 - Jan 31") %>% select(-c("Country...13","...12"))
names(Twitter.Jan.15.31)[names(Twitter.Jan.15.31) == "Country...7"] <- "Country"
colnames(Twitter.Jan.15.31)
Twitter.Feb.1.15 = aws.s3::s3read_using(read_excel, object = "s3://gpa-research/covid19-disinfo/covid-19-disinfo-worksheet-sieus-edits.xlsx", sheet = "Twitter Feb 1 - Feb 15")
colnames(Twitter.Feb.1.15)
Twitter.Feb.15.29 = aws.s3::s3read_using(read_excel, object = "s3://gpa-research/covid19-disinfo/covid-19-disinfo-worksheet-sieus-edits.xlsx", sheet = "Twitter Feb 15 - Feb 29")
colnames(Twitter.Feb.15.29)
Twitter.Mar.1.15 = aws.s3::s3read_using(read_excel, object = "s3://gpa-research/covid19-disinfo/covid-19-disinfo-worksheet-sieus-edits.xlsx", sheet = "Twitter March 1-15")
colnames(Twitter.Mar.1.15)
#Join all twitter data
twitter.data <- full_join(Twitter.Jan.1.15,Twitter.Jan.15.31, by = colnames(Twitter.Mar.1.15)) %>%
full_join(Twitter.Feb.1.15) %>% full_join(Twitter.Feb.15.29) %>% full_join(Twitter.Mar.1.15)
#Digital data
digital.data <- aws.s3::s3read_using(read_csv, object = "s3://gpa-research/covid19-disinfo/digital-data-final-cuts.csv")
#DOS property data
DOS.Prop = aws.s3::s3read_using(read_excel, object = "s3://gpa-research/covid19-disinfo/covid-19-disinfo-worksheets-raw-data.xlsx", sheet = "DOS Properties Data")
#data <- DOS.Prop %>% filter(str_detect(text,"Wuhanvirus"))
#data <- DOS.Prop %>% filter(str_detect(text,"misinfo"))
#data <- DOS.Prop %>% filter(str_detect(text,"disinfo"))
#data <- DOS.Prop %>% filter(str_detect(text,"Pompeo"))
#data <- DOS.Prop %>% filter(str_detect(text,"bio"))
#colnames(DOS.Prop)
#############################################DIGITAL: State-sponsored###############################################
#state_sponsors<- read_excel("State_Sponsors.xlsx")
#state_sponsors$outlet<- factor(state_sponsors$outlet)
#digital.data<- left_join(digital.data,state_sponsors)
#a<- data.frame(unique(digital.data$outlet[is.na(digital.data$State.Sponsored)]))
#
#############################################DIGITAL: THEMES###############################################
Theme <- digital.data[((str_detect(digital.data$description,"weapon")|str_detect(digital.data$description,"warfare"))
& (str_detect(digital.data$description,"U.S.")|str_detect(digital.data$description,"United States")|str_detect(digital.data$description,"USA")|str_detect(digital.data$description,"US")))|
((str_detect(digital.data$title,"weapon")|str_detect(digital.data$title,"warfare"))
& (str_detect(digital.data$title,"U.S.")|str_detect(digital.data$title,"United States")|str_detect(digital.data$title,"USA")|str_detect(digital.data$title,"US"))),]%>%
filter(!is.na(title))
usweapon<- Theme[c(1,3,4,7,8),]
usweapon$Theme <- "COVID-19 is created by the U.S."
weapon <- digital.data[str_detect(digital.data$description,"weapon|Weapon|warfare|Warfare"),]%>%
filter(!is.na(title))
weapon$Theme <- "COVID-19 is a bioweapon"
manmade <- digital.data[str_detect(digital.data$description,"manmade|Man-Made|lab|Lab|laboratory|Laboratory|not natural"),]%>%
filter(!is.na(title))
manmade$Theme<- "COVID-19 is man-made"
themes<- full_join(usweapon,weapon,by = colnames(usweapon)) %>% full_join(manmade)
themes.analysis<- themes %>% group_by(Theme) %>% summarise(engagement = mean(total,na.rm = T)) %>% add_row(Theme = "2019 Average Content",engagement = 1415)
themes.analysis$Control <- str_detect(themes.analysis$Theme,"2019 Average Content")
themes.analysis$Control <- factor(themes.analysis$Control,levels = c(TRUE,FALSE),
labels = c("2019 Average Content","Theme of Disinformation"))
themes.analysis$Theme <- factor(themes.analysis$Theme , levels = themes.analysis$Theme[
order(themes.analysis$engagement)])
png('covid19-disinfo-themes.png', width = 14, height = 4, units = 'in',res=250)
ggplot(themes.analysis, aes(x=Theme, y=engagement, ymin=min(engagement),
ymax=max(engagement), fill = Control)) +
geom_bar(stat='identity', position = "dodge")+gpa_theme(20)+
geom_text(color = "black", aes(x = Theme, y =engagement+1500, label = round(engagement)),
position = position_stack(), size = 8) +coord_flip()+
labs(x="Prominent Themes", y='Engagement', title=
'Disinformation Engagement by Themes')+
theme(axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))+
scale_fill_manual('',values=primary.colors[2:1])
dev.off()
#############################################DIGITAL: HIGHEST ENGAGEMENT CONTENTS###############################################
digital.data$shortened.title = paste0(word(digital.data$title, 1,7,sep=" "),"...")
digital.data$shortened.title[digital.data$shortened.title == "NA..."] <- digital.data$title[digital.data$shortened.title == "NA..."]
digital.data.analysis <-  digital.data %>% group_by(shortened.title) %>%
summarise(Facebook = sum(facebook,na.rm = T),
Twitter = sum(twitter,na.rm = T),
Reddit = sum(reddit,na.rm = T),
Total = sum(total,na.rm = T))
digital.data.analysis$Control <- str_detect(digital.data.analysis$shortened.title,"2019 Average Content")
digital.data.analysis$Control <- factor(digital.data.analysis$Control,levels = c(TRUE,FALSE),
labels = c("2019 Average Content","Disinformation"))
digital.data.analysis$shortened.title <- factor(digital.data.analysis$shortened.title , levels = digital.data.analysis$shortened.title[
order(digital.data.analysis$Total)])
png('covid-disinfo-digital-highest-engage.png', width = 24, height = 15, units = 'in',res=250)
ggplot(digital.data.analysis[digital.data.analysis$Total>12079.0 | digital.data.analysis$shortened.title== "2019 Average Content",],
aes(x=shortened.title, y=Total, fill=Control, ymin=min(Total), ymax=.2)) +
geom_bar(stat='identity', position = "dodge")+gpa_theme(30)+
geom_text(color = "black", aes(x = shortened.title, y =Total+5000, label = Total),
position = position_stack(), size = 7) + coord_flip()+
labs(x=NULL, y='Digital Engagement', title=
'Disinformation Engagement Across Digital Platforms',
caption = "Source: Digital Data from January 01, 2020 to March 15, 2020")+
scale_y_continuous()+
theme(axis.text.y = element_text(size = 30),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 30),
axis.title.y = element_text(size = 30))+
scale_fill_manual('',values=primary.colors[c(2:1)])
dev.off()
#############################################DIGITAL: AUTHORS###############################################
digital.data.analysis <-  digital.data %>% group_by(authors) %>%
summarise(Facebook = sum(facebook,na.rm = T),
Twitter = sum(twitter,na.rm = T),
Reddit = sum(reddit,na.rm = T),
Total = sum(total,na.rm = T)) %>% filter(!is.na(authors))
digital.data.analysis$authors <- factor(digital.data.analysis$authors , levels = digital.data.analysis$authors[
order(digital.data.analysis$Total)])
png('covid-disinfo-digital-authors.png', width = 14, height = 8, units = 'in',res=250)
ggplot(digital.data.analysis[digital.data.analysis$Total>20000,], aes(x=authors, y=Total, ymin=min(Total),
ymax=.2)) +
geom_bar(stat='identity', position = "dodge",fill = primary.colors[1])+gpa_theme(20)+
geom_text(color = "white", aes(x = authors, y =Total-7000, label = Total),
position = position_stack(), size = 7) + coord_flip()+
labs(x=NULL, y='Digital Engagement', title=
'Disinformation Engagement By Authors',
caption = "Source: Digital Data from January 01, 2020 to March 15, 2020")+
scale_y_continuous()+
theme(axis.text.y = element_text(size = 20),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
dev.off()
#average
digital.data.analysis <-  digital.data %>% group_by(authors) %>%
summarise(Facebook = mean(facebook,na.rm = T),
Twitter = mean(twitter,na.rm = T),
Reddit = mean(reddit,na.rm = T),
Total = mean(total,na.rm = T)) %>% filter(!is.na(authors))
digital.data.analysis$authors <- factor(digital.data.analysis$authors , levels = digital.data.analysis$authors[
order(digital.data.analysis$Total)])
digital.data.analysis$Control <- str_detect(digital.data.analysis$authors,"2019 Average Content")
digital.data.analysis$Control <- factor(digital.data.analysis$Control,levels = c(TRUE,FALSE),
labels = c("2019 Average Content","Disinformation"))
ggplot(digital.data.analysis[digital.data.analysis$Total>7.839200e+03| digital.data.analysis$authors=="2019 Average Content",],
aes(x=authors, y=Total, ymin=min(Total), ymax=.2, fill = Control)) +
geom_bar(stat='identity', position = "dodge")+gpa_theme(20)+
geom_text(color = "black", aes(x = authors, y =Total+7000, label = round(Total)),
position = position_stack(), size = 7) + coord_flip()+
labs(x=NULL, y='Digital Engagement', title=
'Disinformation Engagement By Authors',
caption = "Source: Digital Data from January 01, 2020 to March 15, 2020")+
scale_y_continuous()+
theme(axis.text.y = element_text(size = 20),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))+
scale_fill_manual('',values = primary.colors[2:1])
library(“aws.iam”)
library(aws.iam)
install.packages(aws.iam)
install.packages("aws.iam")
Sys.setenv("AWS_ACCESS_KEY_ID" = my_key,
"AWS_SECRET_ACCESS_KEY" = my_secret,
"AWS_DEFAULT_REGION" = "us-east-1")
library(aws.s3)
library(aws.iam)
library(tidyverse)
Sys.setenv("AWS_ACCESS_KEY_ID" = "AKIAVSMF5JL4AK775R6Y",
"AWS_SECRET_ACCESS_KEY" = "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",
"AWS_DEFAULT_REGION" = "us-east-1")
get_caller_identity()
my_id <- "arn:aws:iam::383069801208:user/SieuTran"
my_code <- “522755”
x <- get_session_token(duration = 900, id= my_id, code= my_code, use = FALSE)
set_credentials(x)
my_id <- "arn:aws:iam::383069801208:user/SieuTran"
my_code <- "522755"
x <- get_session_token(duration = 900, id= my_id, code= my_code, use = FALSE)
set_credentials(x)
bucketlist()
dat = aws.s3::s3read_using(read_csv,object ="s3://gpa-research/Iran-Persuadability-Analysis/combinedresults.csv")
Sys.setenv("AWS_ACCESS_KEY_ID" = "AKIAVSMF5JL4AK775R6Y",
"AWS_SECRET_ACCESS_KEY" = "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",
"AWS_DEFAULT_REGION" = "us-east-1")
library(aws.s3)
library(aws.iam)
library(tidyverse)
get_caller_identity()
### This should show your account number, your ARN, and userId ###
### You will now need to know the Amazon Resource Number (ARN) for your MFA Device. This may be found under My Security Credentials and is listed below where you would add your MFA device, it will look similar to the ARN listed when you called get_caller_identity but it will state that it is a MFA ARN e.g. arn:aws:iam::XXXX:mfa/RiceGI ###
my_id <- "383069801208"
my_code <- "327564"
x <- get_session_token(duration = 900, id= my_id, code= my_code, use = FALSE)
set_credentials(x)
dat = aws.s3::s3read_using(read_csv,object ="s3://gpa-research/Iran-Persuadability-Analysis/combinedresults.csv")
get_caller_identity()
Sys.setenv("AWS_ACCESS_KEY_ID" = "AKIAVSMF5JL4AK775R6Y",
"AWS_SECRET_ACCESS_KEY" = "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",
"AWS_DEFAULT_REGION" = "us-east-1")
library(aws.s3)
library(aws.iam)
library(tidyverse)
get_caller_identity()
my_id <- "383069801208"
my_code <- "381532"
x <- get_session_token(duration = 900, id= my_id, code= my_code, use = FALSE)
set_credentials(x)
dat = aws.s3::s3read_using(read_csv,object ="s3://gpa-research/Iran-Persuadability-Analysis/combinedresults.csv")
Sys.setenv("AWS_ACCESS_KEY_ID" = "AKIAVSMF5JL4IQ2XKHXF",
"AWS_SECRET_ACCESS_KEY" = "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",
"AWS_DEFAULT_REGION" = "us-east-1")
library(aws.s3)
library(aws.iam)
library(tidyverse)
get_caller_identity()
my_id <- "383069801208:user/SieuTran"
my_code <- "327857"
x <- get_session_token(duration = 900, id= my_id, code= my_code, use = FALSE)
set_credentials(x)
dat = aws.s3::s3read_using(read_csv,object ="s3://gpa-research/Iran-Persuadability-Analysis/combinedresults.csv")
my_id <- "383069801208"
my_code <- "327857"
x <- get_session_token(duration = 900, id= my_id, code= my_code, use = FALSE)
set_credentials(x)
dat = aws.s3::s3read_using(read_csv,object ="s3://gpa-research/Iran-Persuadability-Analysis/combinedresults.csv")
my_id <- "arn:aws:iam::383069801208:user/SieuTran"
my_code <- "191960"
x <- get_session_token(duration = 900, id= my_id, code= my_code, use = FALSE)
set_credentials(x)
dat = aws.s3::s3read_using(read_csv,object ="s3://gpa-research/Iran-Persuadability-Analysis/combinedresults.csv")
set_credentials(x)
dat = aws.s3::s3read_using(read_csv,object ="s3://gpa-research/Iran-Persuadability-Analysis/combinedresults.csv")
bucketlist()
get_caller_identity()
Sys.setenv("AWS_ACCESS_KEY_ID" = "AKIAVSMF5JL4IQ2XKHXF",
"AWS_SECRET_ACCESS_KEY" = "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",
"AWS_DEFAULT_REGION" = "us-east-1")
library(aws.s3)
library(aws.iam)
library(tidyverse)
Sys.setenv("AWS_ACCESS_KEY_ID" = "AKIAVSMF5JL4IQ2XKHXF",
"AWS_SECRET_ACCESS_KEY" = "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",
"AWS_DEFAULT_REGION" = "us-east-1")
library(aws.s3)
library(aws.iam)
library(tidyverse)
get_caller_identity()
my_id <- "arn:aws:iam::383069801208:user/SieuTran"
my_code <- "971379"
x <- get_session_token(duration = 900, id= my_id, code= my_code, use = FALSE)
my_id <- "arn:aws:iam::383069801208:user/SieuTran"
my_code <- "432513"
x <- get_session_token(duration = 900, id= my_id, code= my_code, use = FALSE)
Sys.setenv("AWS_ACCESS_KEY_ID" = "AKIAVSMF5JL4IQ2XKHXF",
"AWS_SECRET_ACCESS_KEY" = "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",
"AWS_DEFAULT_REGION" = "us-east-1")
library(aws.s3)
library(aws.iam)
library(tidyverse)
get_caller_identity()
### This should show your account number, your ARN, and userId ###
### You will now need to know the Amazon Resource Number (ARN) for your MFA Device. This may be found under My Security Credentials and is listed below where you would add your MFA device, it will look similar to the ARN listed when you called get_caller_identity but it will state that it is a MFA ARN e.g. arn:aws:iam::XXXX:mfa/RiceGI ###
my_id <- "arn:aws:iam::383069801208:user/SieuTran"
my_id <- "arn:aws:iam::383069801208:user/SieuTran"
my_code <- "685114"
x <- get_session_token(duration = 900, id= my_id, code= my_code, use = FALSE)
get_session_token(duration = 900, id= my_id, code= my_code, use = FALSE)
Sys.setenv("AWS_ACCESS_KEY_ID" = "AKIAVSMF5JL4IQ2XKHXF",
"AWS_SECRET_ACCESS_KEY" = "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",
"AWS_DEFAULT_REGION" = "us-east-1")
Sys.setenv("AWS_ACCESS_KEY_ID" = "AKIAVSMF5JL4IQ2XKHXF",
"AWS_SECRET_ACCESS_KEY" = "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",
"AWS_DEFAULT_REGION" = "us-east-1")
library(aws.s3)
library(aws.iam)
library(tidyverse)
get_caller_identity()
Sys.setenv("AWS_ACCESS_KEY_ID" = "AKIAVSMF5JL4IQ2XKHXF",
"AWS_SECRET_ACCESS_KEY" = "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",
"AWS_DEFAULT_REGION" = "us-east-1")
library(aws.s3)
library(aws.iam)
library(tidyverse)
get_caller_identity()
### This should show your account number, your ARN, and userId ###
### You will now need to know the Amazon Resource Number (ARN) for your MFA Device.
#This may be found under My Security Credentials and is listed below where you would add your MFA device,
#it will look similar to the ARN listed when you called get_caller_identity but it will state that it is a MFA ARN
#e.g. arn:aws:iam::XXXX:mfa/RiceGI ###
my_id <- "arn:aws:iam::383069801208:user/SieuTran"
my_code <- 066288
x <- get_session_token(duration = 900, id= my_id, code= my_code, use = FALSE)
my_id <- "arn:aws:iam::383069801208:user/SieuTran"
my_code <- "066288"
x <- get_session_token(duration = 900, id= my_id, code= my_code, use = FALSE)
x <- get_session_token(duration = 900, id= my_id, code= 066288, use = FALSE)
set_credentials(x)
dat = aws.s3::s3read_using(read_csv,object ="s3://gpa-research/Iran-Persuadability-Analysis/combinedresults.csv")
x <- get_session_token(duration = 900, id= my_id, code= 373114, use = FALSE)
my_id <- arn:aws:iam::383069801208:user/SieuTran
my_code <- 066288
x <- get_session_token(duration = 900, id= my_id, code= 373114, use = FALSE)
x <- get_session_token(use = FALSE)
get_session_token(use = FALSE)
my_id <- "arn:aws:iam::383069801208:user/SieuTran"
my_code <- "459917"
x <- get_session_token(duration = 900, serial_number=my_id,
token_code = my_code,
set_env = TRUE, use = FALSE)
set_credentials(x)
install.packages("noctua")
dat = aws.s3::s3read_using(read_csv,object ="s3://gpa-research/Iran-Persuadability-Analysis/combinedresults.csv")
library("noctua")
get_caller_identity()
### This should show your account number, your ARN, and userId ###
### You will now need to know the Amazon Resource Number (ARN) for your MFA Device.
#This may be found under My Security Credentials and is listed below where you would add your MFA device,
#it will look similar to the ARN listed when you called get_caller_identity but it will state that it is a MFA ARN
#e.g. arn:aws:iam::XXXX:mfa/RiceGI ###
my_id <- "arn:aws:iam::383069801208:user/SieuTran"
my_code <- "915978"
x <- get_session_token(duration = 900, serial_number=my_id,
token_code = my_code,
set_env = TRUE, use = FALSE)
set_credentials(x)
x <- get_session_token(duration = 900, serial_number=my_id,
token_code = my_code,
set_env = TRUE)
set_credentials(x)
Sys.setenv("AWS_ACCESS_KEY_ID" = "AKIAVSMF5JL4IQ2XKHXF",
"AWS_SECRET_ACCESS_KEY" = "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",
"AWS_DEFAULT_REGION" = "us-east-1")
x <- get_session_token(duration = 900, serial_number=my_id,
token_code = my_code,
set_env = TRUE)
get_caller_identity
get_caller_identity()
Sys.setenv("AWS_ACCESS_KEY_ID" = "AKIAVSMF5JL4IQ2XKHXF",
"AWS_SECRET_ACCESS_KEY" = "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",
"AWS_DEFAULT_REGION" = "us-east-1")
library(aws.s3)
library(aws.iam)
library(tidyverse)
get_caller_identity()
### This should show your account number, your ARN, and userId ###
### You will now need to know the Amazon Resource Number (ARN) for your MFA Device.
#This may be found under My Security Credentials and is listed below where you would add your MFA device,
#it will look similar to the ARN listed when you called get_caller_identity but it will state that it is a MFA ARN
#e.g. arn:aws:iam::XXXX:mfa/RiceGI ###
my_id <- "arn:aws:iam::383069801208:user/SieuTran"
my_code <- "915978"
x <- get_session_token(duration = 900, serial_number=my_id, region_name ="us-east-1",
token_code = my_code,
set_env = TRUE)
set_credentials(x)
my_id <- "arn:aws:iam::383069801208:user/SieuTran"
my_code <- "011632"
x <- get_session_token(duration = 900, serial_number=my_id, region_name ="us-east-1",
token_code = my_code,
set_env = TRUE)
set_credentials(x)
Sys.setenv("AWS_ACCESS_KEY_ID" = "AKIAVSMF5JL4IQ2XKHXF",
"AWS_SECRET_ACCESS_KEY" = "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",
"AWS_DEFAULT_REGION" = "us-east-1")
library(aws.s3)
library(aws.iam)
library(tidyverse)
get_caller_identity()
### This should show your account number, your ARN, and userId ###
### You will now need to know the Amazon Resource Number (ARN) for your MFA Device.
#This may be found under My Security Credentials and is listed below where you would add your MFA device,
#it will look similar to the ARN listed when you called get_caller_identity but it will state that it is a MFA ARN
#e.g. arn:aws:iam::XXXX:mfa/RiceGI ###
my_id <- "arn:aws:iam::383069801208:user/SieuTran"
my_code <- "079043"
x <- get_session_token(duration = 900, serial_number=my_id, region_name ="us-east-1",
token_code = my_code,
set_env = TRUE)
set_credentials(x)
dat = aws.s3::s3read_using(read_csv,object ="s3://gpa-research/Iran-Persuadability-Analysis/combinedresults.csv")
Sys.setenv("AWS_ACCESS_KEY_ID" = "AKIAVSMF5JL4IQ2XKHXF",
"AWS_SECRET_ACCESS_KEY" = "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",
"AWS_DEFAULT_REGION" = "us-east-1")
library(aws.s3)
library(aws.iam)
library(tidyverse)
get_caller_identity()
### This should show your account number, your ARN, and userId ###
### You will now need to know the Amazon Resource Number (ARN) for your MFA Device.
#This may be found under My Security Credentials and is listed below where you would add your MFA device,
#it will look similar to the ARN listed when you called get_caller_identity but it will state that it is a MFA ARN
#e.g. arn:aws:iam::XXXX:mfa/RiceGI ###
my_id <- "arn:aws:iam::383069801208:user/SieuTran"
my_code <- "354475"
x <- get_session_token(duration = 900, serial_number=my_id, region_name ="us-east-1",
token_code = my_code,
set_env = TRUE)
set_credentials(x)
dat = aws.s3::s3read_using(read_csv,object ="s3://gpa-research/Iran-Persuadability-Analysis/combinedresults.csv")
View(dat)
library(extrafont)
font_import(pattern="Roboto")
fonts()
font_import()
extrafont::loadfonts(device = "win")
font_import("Open Sans")
font_import("Open Sans Bold.tff")
font_import("OpenSans-Bold.ttf")
font_import("OpenSans")
font_import(FontName = "Open Sans")
devtools::install_github("sieu-tran/GPATOOLS")
devtools::install_github("sieu-tran/GPATOOLS")
install.packages("tibble")
library(tidyverse)
install.packages("stringi",type="win.binary")
library(tidyverse)
devtools::install_github("sieu-tran/GPATOOLS")
library(aws.s3)
library(tidyverse)
library(stringr)
library(reshape2)
library(gbm)
library(rpart)
library(rpart.plot)
library(readxl)
library(radiant.data)
library(zoo)
library(base)
library(survey)
library(caret)
library(janitor)
library(dplyr)
library(ggalt)
library(GPATOOLS)
GPATOOLS::compute_netp
library(GPATOOLS)
setwd("~/GitHub/GPATOOLS")
library("roxygen2")
devtools::document
devtools::document()
devtools::document()
